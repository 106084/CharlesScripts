#INIT
source /usr/share/autojump/autojump.sh

#PATHES
export PATH=$HOME/Software/anaconda3/bin:$PATH
export PATH=$HOME/.userscripts:$PATH
export PATH=/home/ash/.cabal/bin/:$PATH

#VARIABLES
export TF_CPP_MIN_LOG_LEVEL=2

#ALIASES
alias ..='cd ..'
alias ...='cd ../..'
alias c='clear; cd'
alias cl='cd ..;ls'
alias eg='grep -E'
alias histg='history | grep'
alias i='ipython --no-confirm-exit --no-banner --pprint -i --pylab=auto'
alias l='ls --color=auto'
alias la='ls --almost-all --color=auto'
alias le='ls --almost-all --color=auto|egrep'
alias lg='ls --almost-all --color=auto|grep'
alias ll='ls --almost-all -lh --color=auto'
alias n='nautilus .&'
alias o='xdg-open'
alias p='python'
alias pdb='python -mpowerline.bindings.pdb'
alias su='sudo su'
alias sd='sudo shutdown -h 0'
alias u='update'
alias t='tensorboard --logdir="."'

#FUNCTIONS

backup() { cp "$1"{,.bak};}

cls() { cd "$1"; ls;}

mcd() { mkdir -p "$1"; cd "$1";}

md5check() { md5sum "$1" | grep "$2";}

extract() {
    if [ -f $1 ] ; then
      case $1 in
        *.tar.bz2)   tar xjf $1     ;;
        *.tar.gz)    tar xzf $1     ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       unrar e $1     ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xf $1      ;;
        *.tbz2)      tar xjf $1     ;;
        *.tgz)       tar xzf $1     ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        7z x $1        ;;
        *)     echo "'$1' cannot be extracted via extract()" ;;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}

clear
